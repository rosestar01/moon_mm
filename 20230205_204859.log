2023-02-05 20:49:04,192 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: win32
Python: 3.7.13 (default, Mar 28 2022, 08:03:21) [MSC v.1916 64 bit (AMD64)]
CUDA available: True
GPU 0: GeForce GTX 1650
CUDA_HOME: D:\ruanjian\cuda\deve
NVCC: Cuda compilation tools, release 11.0, V11.0.194
MSVC: 用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.29.30146 版
GCC: n/a
PyTorch: 1.7.1+cu110
PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192729112
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191125 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 2019
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.4
  - Magma 2.5.4
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -openmp:experimental -DNDEBUG -DUSE_FBGEMM -DUSE_VULKAN_WRAPPER, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, 

TorchVision: 0.8.2+cu110
OpenCV: 4.6.0
MMCV: 1.7.1
MMCV Compiler: MSVC 192930146
MMCV CUDA Compiler: 11.0
MMClassification: 0.25.0+3d4f80d
------------------------------------------------------------

2023-02-05 20:49:04,192 - mmcls - INFO - Distributed training: False
2023-02-05 20:49:05,159 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNeSt',
        depth=50,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=5,
        in_channels=2048,
        loss=dict(
            type='LabelSmoothLoss',
            loss_weight=1.0,
            label_smooth_val=0.1,
            num_classes=5,
            reduction='mean'),
        topk=1,
        cal_acc=True))
dataset_type = 'CustomDataset'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=0,
    train=dict(
        type='CustomDataset',
        data_prefix=
        'E:/python-project/other/mmclassification/data/flower_imagenet/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='CustomDataset',
        data_prefix=
        'E:/python-project/other/mmclassification/data/flower_imagenet/val',
        ann_file=
        'E:/python-project/other/mmclassification/data/flower_imagenet/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='CustomDataset',
        data_prefix=
        'E:/python-project/other/mmclassification/data/flower_imagenet/val',
        ann_file=
        'E:/python-project/other/mmclassification/data/flower_imagenet/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric_options={'topk': (1, ))
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[30, 60, 90])
runner = dict(type='EpochBasedRunner', max_epochs=100)
checkpoint_config = dict(interval=1)
log_config = dict(interval=2, hooks=[dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
policies = [[{
    'type': 'Posterize',
    'bits': 4,
    'prob': 0.4
}, {
    'type': 'Rotate',
    'angle': 30.0,
    'prob': 0.6
}],
            [{
                'type': 'Solarize',
                'thr': 113.77777777777777,
                'prob': 0.6
            }, {
                'type': 'AutoContrast',
                'prob': 0.6
            }],
            [{
                'type': 'Equalize',
                'prob': 0.8
            }, {
                'type': 'Equalize',
                'prob': 0.6
            }],
            [{
                'type': 'Posterize',
                'bits': 5,
                'prob': 0.6
            }, {
                'type': 'Posterize',
                'bits': 5,
                'prob': 0.6
            }],
            [{
                'type': 'Equalize',
                'prob': 0.4
            }, {
                'type': 'Solarize',
                'thr': 142.22222222222223,
                'prob': 0.2
            }],
            [{
                'type': 'Equalize',
                'prob': 0.4
            }, {
                'type': 'Rotate',
                'angle': 26.666666666666668,
                'prob': 0.8
            }],
            [{
                'type': 'Solarize',
                'thr': 170.66666666666666,
                'prob': 0.6
            }, {
                'type': 'Equalize',
                'prob': 0.6
            }],
            [{
                'type': 'Posterize',
                'bits': 6,
                'prob': 0.8
            }, {
                'type': 'Equalize',
                'prob': 1.0
            }],
            [{
                'type': 'Rotate',
                'angle': 10.0,
                'prob': 0.2
            }, {
                'type': 'Solarize',
                'thr': 28.444444444444443,
                'prob': 0.6
            }],
            [{
                'type': 'Equalize',
                'prob': 0.6
            }, {
                'type': 'Posterize',
                'bits': 5,
                'prob': 0.4
            }],
            [{
                'type': 'Rotate',
                'angle': 26.666666666666668,
                'prob': 0.8
            }, {
                'type': 'ColorTransform',
                'magnitude': 0.0,
                'prob': 0.4
            }],
            [{
                'type': 'Rotate',
                'angle': 30.0,
                'prob': 0.4
            }, {
                'type': 'Equalize',
                'prob': 0.6
            }],
            [{
                'type': 'Equalize',
                'prob': 0.0
            }, {
                'type': 'Equalize',
                'prob': 0.8
            }],
            [{
                'type': 'Invert',
                'prob': 0.6
            }, {
                'type': 'Equalize',
                'prob': 1.0
            }],
            [{
                'type': 'ColorTransform',
                'magnitude': 0.4,
                'prob': 0.6
            }, {
                'type': 'Contrast',
                'magnitude': 0.8,
                'prob': 1.0
            }],
            [{
                'type': 'Rotate',
                'angle': 26.666666666666668,
                'prob': 0.8
            }, {
                'type': 'ColorTransform',
                'magnitude': 0.2,
                'prob': 1.0
            }],
            [{
                'type': 'ColorTransform',
                'magnitude': 0.8,
                'prob': 0.8
            }, {
                'type': 'Solarize',
                'thr': 56.888888888888886,
                'prob': 0.8
            }],
            [{
                'type': 'Sharpness',
                'magnitude': 0.7,
                'prob': 0.4
            }, {
                'type': 'Invert',
                'prob': 0.6
            }],
            [{
                'type': 'Shear',
                'magnitude': 0.16666666666666666,
                'prob': 0.6,
                'direction': 'horizontal'
            }, {
                'type': 'Equalize',
                'prob': 1.0
            }],
            [{
                'type': 'ColorTransform',
                'magnitude': 0.0,
                'prob': 0.4
            }, {
                'type': 'Equalize',
                'prob': 0.6
            }],
            [{
                'type': 'Equalize',
                'prob': 0.4
            }, {
                'type': 'Solarize',
                'thr': 142.22222222222223,
                'prob': 0.2
            }],
            [{
                'type': 'Solarize',
                'thr': 113.77777777777777,
                'prob': 0.6
            }, {
                'type': 'AutoContrast',
                'prob': 0.6
            }],
            [{
                'type': 'Invert',
                'prob': 0.6
            }, {
                'type': 'Equalize',
                'prob': 1.0
            }],
            [{
                'type': 'ColorTransform',
                'magnitude': 0.4,
                'prob': 0.6
            }, {
                'type': 'Contrast',
                'magnitude': 0.8,
                'prob': 1.0
            }],
            [{
                'type': 'Equalize',
                'prob': 0.8
            }, {
                'type': 'Equalize',
                'prob': 0.6
            }]]
train_cfg = dict(mixup=dict(alpha=0.2, num_classes=5))
work_dir = './work_dirs\moon_resnet'
gpu_ids = [0]

2023-02-05 20:49:05,173 - mmcls - INFO - Set random seed to 904403364, deterministic: False
2023-02-05 20:49:08,141 - mmcls - INFO - Start running, host: 86176@LAPTOP-D8UGO3K6, work_dir: E:\python-project\other\mmclassification\tools\work_dirs\moon_resnet
2023-02-05 20:49:08,141 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2023-02-05 20:49:08,141 - mmcls - INFO - workflow: [('train', 1)], max: 100 epochs
2023-02-05 20:49:08,141 - mmcls - INFO - Checkpoints will be saved to E:\python-project\other\mmclassification\tools\work_dirs\moon_resnet by HardDiskBackend.
2023-02-05 20:50:39,981 - mmcls - INFO - Saving checkpoint at 1 epochs
2023-02-05 20:52:12,109 - mmcls - INFO - Saving checkpoint at 2 epochs
2023-02-05 20:53:41,310 - mmcls - INFO - Saving checkpoint at 3 epochs
2023-02-05 20:55:11,349 - mmcls - INFO - Saving checkpoint at 4 epochs
2023-02-05 20:56:47,744 - mmcls - INFO - Saving checkpoint at 5 epochs
2023-02-05 20:58:13,623 - mmcls - INFO - Saving checkpoint at 6 epochs
2023-02-05 20:59:39,875 - mmcls - INFO - Saving checkpoint at 7 epochs
2023-02-05 21:01:05,794 - mmcls - INFO - Saving checkpoint at 8 epochs
2023-02-05 21:02:31,841 - mmcls - INFO - Saving checkpoint at 9 epochs
2023-02-05 21:03:59,224 - mmcls - INFO - Saving checkpoint at 10 epochs
2023-02-05 21:05:26,767 - mmcls - INFO - Saving checkpoint at 11 epochs
2023-02-05 21:06:53,677 - mmcls - INFO - Saving checkpoint at 12 epochs
2023-02-05 21:08:20,255 - mmcls - INFO - Saving checkpoint at 13 epochs
2023-02-05 21:09:46,396 - mmcls - INFO - Saving checkpoint at 14 epochs
2023-02-05 21:11:12,347 - mmcls - INFO - Saving checkpoint at 15 epochs
2023-02-05 21:12:38,233 - mmcls - INFO - Saving checkpoint at 16 epochs
2023-02-05 21:14:04,181 - mmcls - INFO - Saving checkpoint at 17 epochs
2023-02-05 21:15:31,754 - mmcls - INFO - Saving checkpoint at 18 epochs
2023-02-05 21:16:59,829 - mmcls - INFO - Saving checkpoint at 19 epochs
2023-02-05 21:18:26,804 - mmcls - INFO - Saving checkpoint at 20 epochs
2023-02-05 21:19:53,155 - mmcls - INFO - Saving checkpoint at 21 epochs
2023-02-05 21:21:22,423 - mmcls - INFO - Saving checkpoint at 22 epochs
2023-02-05 21:22:52,619 - mmcls - INFO - Saving checkpoint at 23 epochs
2023-02-05 21:24:18,979 - mmcls - INFO - Saving checkpoint at 24 epochs
2023-02-05 21:25:46,055 - mmcls - INFO - Saving checkpoint at 25 epochs
2023-02-05 21:27:12,927 - mmcls - INFO - Saving checkpoint at 26 epochs
2023-02-05 21:28:39,975 - mmcls - INFO - Saving checkpoint at 27 epochs
2023-02-05 21:30:06,428 - mmcls - INFO - Saving checkpoint at 28 epochs
2023-02-05 21:31:32,835 - mmcls - INFO - Saving checkpoint at 29 epochs
2023-02-05 21:32:59,038 - mmcls - INFO - Saving checkpoint at 30 epochs
2023-02-05 21:34:25,136 - mmcls - INFO - Saving checkpoint at 31 epochs
2023-02-05 21:35:51,259 - mmcls - INFO - Saving checkpoint at 32 epochs
2023-02-05 21:37:17,555 - mmcls - INFO - Saving checkpoint at 33 epochs
2023-02-05 21:38:43,995 - mmcls - INFO - Saving checkpoint at 34 epochs
2023-02-05 21:40:10,841 - mmcls - INFO - Saving checkpoint at 35 epochs
2023-02-05 21:41:37,675 - mmcls - INFO - Saving checkpoint at 36 epochs
2023-02-05 21:43:04,684 - mmcls - INFO - Saving checkpoint at 37 epochs
2023-02-05 21:44:31,717 - mmcls - INFO - Saving checkpoint at 38 epochs
2023-02-05 21:45:58,225 - mmcls - INFO - Saving checkpoint at 39 epochs
2023-02-05 21:47:24,474 - mmcls - INFO - Saving checkpoint at 40 epochs
2023-02-05 21:48:50,872 - mmcls - INFO - Saving checkpoint at 41 epochs
2023-02-05 21:50:18,697 - mmcls - INFO - Saving checkpoint at 42 epochs
2023-02-05 21:51:46,999 - mmcls - INFO - Saving checkpoint at 43 epochs
2023-02-05 21:53:13,806 - mmcls - INFO - Saving checkpoint at 44 epochs
2023-02-05 21:54:39,806 - mmcls - INFO - Saving checkpoint at 45 epochs
2023-02-05 21:56:05,819 - mmcls - INFO - Saving checkpoint at 46 epochs
2023-02-05 21:57:31,910 - mmcls - INFO - Saving checkpoint at 47 epochs
2023-02-05 21:58:58,785 - mmcls - INFO - Saving checkpoint at 48 epochs
2023-02-05 22:00:25,847 - mmcls - INFO - Saving checkpoint at 49 epochs
2023-02-05 22:01:52,591 - mmcls - INFO - Saving checkpoint at 50 epochs
2023-02-05 22:03:19,202 - mmcls - INFO - Saving checkpoint at 51 epochs
2023-02-05 22:04:45,793 - mmcls - INFO - Saving checkpoint at 52 epochs
2023-02-05 22:06:12,418 - mmcls - INFO - Saving checkpoint at 53 epochs
2023-02-05 22:07:39,006 - mmcls - INFO - Saving checkpoint at 54 epochs
2023-02-05 22:09:05,566 - mmcls - INFO - Saving checkpoint at 55 epochs
2023-02-05 22:10:32,128 - mmcls - INFO - Saving checkpoint at 56 epochs
2023-02-05 22:11:58,974 - mmcls - INFO - Saving checkpoint at 57 epochs
2023-02-05 22:13:25,744 - mmcls - INFO - Saving checkpoint at 58 epochs
2023-02-05 22:14:52,959 - mmcls - INFO - Saving checkpoint at 59 epochs
2023-02-05 22:16:19,609 - mmcls - INFO - Saving checkpoint at 60 epochs
2023-02-05 22:17:46,118 - mmcls - INFO - Saving checkpoint at 61 epochs
2023-02-05 22:19:12,538 - mmcls - INFO - Saving checkpoint at 62 epochs
2023-02-05 22:20:38,907 - mmcls - INFO - Saving checkpoint at 63 epochs
2023-02-05 22:22:05,444 - mmcls - INFO - Saving checkpoint at 64 epochs
2023-02-05 22:23:32,009 - mmcls - INFO - Saving checkpoint at 65 epochs
2023-02-05 22:24:58,881 - mmcls - INFO - Saving checkpoint at 66 epochs
2023-02-05 22:26:25,818 - mmcls - INFO - Saving checkpoint at 67 epochs
2023-02-05 22:27:56,127 - mmcls - INFO - Saving checkpoint at 68 epochs
2023-02-05 22:29:22,888 - mmcls - INFO - Saving checkpoint at 69 epochs
2023-02-05 22:30:49,804 - mmcls - INFO - Saving checkpoint at 70 epochs
2023-02-05 22:32:16,272 - mmcls - INFO - Saving checkpoint at 71 epochs
2023-02-05 22:33:42,630 - mmcls - INFO - Saving checkpoint at 72 epochs
2023-02-05 22:35:09,096 - mmcls - INFO - Saving checkpoint at 73 epochs
2023-02-05 22:36:35,845 - mmcls - INFO - Saving checkpoint at 74 epochs
2023-02-05 22:38:03,586 - mmcls - INFO - Saving checkpoint at 75 epochs
2023-02-05 22:39:29,703 - mmcls - INFO - Saving checkpoint at 76 epochs
2023-02-05 22:40:56,096 - mmcls - INFO - Saving checkpoint at 77 epochs
2023-02-05 22:42:23,079 - mmcls - INFO - Saving checkpoint at 78 epochs
2023-02-05 22:43:50,285 - mmcls - INFO - Saving checkpoint at 79 epochs
2023-02-05 22:45:17,358 - mmcls - INFO - Saving checkpoint at 80 epochs
2023-02-05 22:46:43,943 - mmcls - INFO - Saving checkpoint at 81 epochs
2023-02-05 22:48:10,325 - mmcls - INFO - Saving checkpoint at 82 epochs
2023-02-05 22:49:36,574 - mmcls - INFO - Saving checkpoint at 83 epochs
2023-02-05 22:51:03,178 - mmcls - INFO - Saving checkpoint at 84 epochs
2023-02-05 22:52:29,559 - mmcls - INFO - Saving checkpoint at 85 epochs
2023-02-05 22:53:56,077 - mmcls - INFO - Saving checkpoint at 86 epochs
2023-02-05 22:55:22,968 - mmcls - INFO - Saving checkpoint at 87 epochs
2023-02-05 22:56:49,718 - mmcls - INFO - Saving checkpoint at 88 epochs
2023-02-05 22:58:16,476 - mmcls - INFO - Saving checkpoint at 89 epochs
2023-02-05 22:59:43,961 - mmcls - INFO - Saving checkpoint at 90 epochs
2023-02-05 23:01:11,338 - mmcls - INFO - Saving checkpoint at 91 epochs
2023-02-05 23:02:39,379 - mmcls - INFO - Saving checkpoint at 92 epochs
2023-02-05 23:04:07,049 - mmcls - INFO - Saving checkpoint at 93 epochs
2023-02-05 23:05:34,704 - mmcls - INFO - Saving checkpoint at 94 epochs
2023-02-05 23:07:02,465 - mmcls - INFO - Saving checkpoint at 95 epochs
2023-02-05 23:08:30,160 - mmcls - INFO - Saving checkpoint at 96 epochs
2023-02-05 23:09:56,924 - mmcls - INFO - Saving checkpoint at 97 epochs
2023-02-05 23:11:23,665 - mmcls - INFO - Saving checkpoint at 98 epochs
2023-02-05 23:12:51,237 - mmcls - INFO - Saving checkpoint at 99 epochs
2023-02-05 23:14:18,509 - mmcls - INFO - Saving checkpoint at 100 epochs
